package com.fabrika.s5takip

import android.content.Intent
import android.os.Bundle
import android.view.View
import android.widget.Toast
import androidx.activity.result.contract.ActivityResultContracts
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import androidx.lifecycle.lifecycleScope
import com.fabrika.s5takip.databinding.ActivityLoginBinding
import com.google.android.gms.auth.api.signin.GoogleSignIn
import com.google.android.gms.common.api.ApiException
import com.google.android.material.textfield.TextInputEditText
import com.google.firebase.auth.FirebaseAuth
import kotlinx.coroutines.launch
import kotlinx.coroutines.tasks.await

/**
 * Giri≈ü ekranƒ± - Gmail √ßoklu hesap se√ßimi ve email giri≈ü/kayƒ±t ayrƒ±mƒ±
 */
class LoginActivity : AppCompatActivity() {

    private lateinit var binding: ActivityLoginBinding
    private lateinit var auth: FirebaseAuth
    private lateinit var firebaseManager: FirebaseManager

    // Google Sign-In i√ßin launcher
    private val googleSignInLauncher = registerForActivityResult(
        ActivityResultContracts.StartActivityForResult()
    ) { result ->
        try {
            val task = GoogleSignIn.getSignedInAccountFromIntent(result.data)
            val account = task.getResult(ApiException::class.java)

            if (account != null) {
                signInWithGoogle(account)
            } else {
                hideLoading()
                Toast.makeText(this, "Google giri≈ü iptal edildi", Toast.LENGTH_SHORT).show()
            }
        } catch (e: ApiException) {
            hideLoading()
            val errorMessage = when (e.statusCode) {
                12501 -> "Giri≈ü iptal edildi"
                12502 -> "Ge√ßersiz hesap se√ßimi"
                else -> "Google giri≈ü hatasƒ±: ${e.message}"
            }
            Toast.makeText(this, errorMessage, Toast.LENGTH_LONG).show()
        }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        binding = ActivityLoginBinding.inflate(layoutInflater)
        setContentView(binding.root)

        // Firebase Auth'u ba≈ülat
        auth = FirebaseAuth.getInstance()
        firebaseManager = FirebaseManager.getInstance()

        // Zaten giri≈ü yapƒ±lmƒ±≈üsa direkt ana sayfaya git
        checkCurrentUser()

        // Click listener'larƒ± ayarla
        setupClickListeners()
    }

    /**
     * Mevcut kullanƒ±cƒ± kontrol√º
     */
    private fun checkCurrentUser() {
        val currentUser = auth.currentUser
        if (currentUser != null) {
            // Kullanƒ±cƒ± zaten giri≈ü yapmƒ±≈ü, grup se√ßimine git
            navigateToGroupSelection()
        }
    }

    /**
     * Click listener'larƒ± ayarla
     */
    private fun setupClickListeners() {
        // Gmail giri≈ü butonu
        binding.btnGoogleSignin.setOnClickListener {
            startGoogleSignIn()
        }

        // Email giri≈ü butonu
        binding.btnEmailSignin.setOnClickListener {
            showEmailLoginDialog()
        }

        // Kayƒ±t ol butonu
        binding.btnRegister.setOnClickListener {
            val intent = Intent(this, RegisterActivity::class.java)
            startActivity(intent)
        }
    }

    /**
     * Google Sign-In ba≈ülat - Hesap se√ßimi ile
     */
    private fun startGoogleSignIn() {
        showLoading("Gmail hesaplarƒ±nƒ±z y√ºkleniyor...")

        try {
            val googleSignInClient = firebaseManager.getGoogleSignInClient(this)

            // √ñnceki oturumlarƒ± temizle, hesap se√ßimi i√ßin
            googleSignInClient.signOut().addOnCompleteListener {
                val signInIntent = googleSignInClient.signInIntent
                googleSignInLauncher.launch(signInIntent)
            }
        } catch (e: Exception) {
            hideLoading()
            Toast.makeText(this, "Google giri≈ü ba≈ülatƒ±lamadƒ±: ${e.message}", Toast.LENGTH_LONG).show()
        }
    }

    /**
     * Google hesabƒ± ile Firebase'e giri≈ü yap
     */
    private fun signInWithGoogle(account: com.google.android.gms.auth.api.signin.GoogleSignInAccount) {
        showLoading("${account.email} ile giri≈ü yapƒ±lƒ±yor...")

        lifecycleScope.launch {
            try {
                println("DEBUG: Google sign-in ba≈üladƒ± - ${account.email}")

                val result = firebaseManager.signInWithGoogle(account)

                println("DEBUG: FirebaseManager sonucu: ${result.isSuccess}")

                if (result.isSuccess) {
                    val user = result.getOrNull()
                    println("DEBUG: AppUser olu≈üturuldu: ${user?.displayName}, ${user?.email}")

                    hideLoading()

                    Toast.makeText(
                        this@LoginActivity,
                        "Ho≈ü geldiniz, ${user?.displayName ?: user?.email}! üéâ",
                        Toast.LENGTH_LONG
                    ).show()

                    // Kƒ±sa bekleme sonrasƒ± navigation
                    binding.root.postDelayed({
                        navigateToGroupSelection()
                    }, 1000)

                } else {
                    hideLoading()
                    val error = result.exceptionOrNull()
                    println("DEBUG: Gmail giri≈ü hatasƒ±: ${error?.message}")

                    Toast.makeText(
                        this@LoginActivity,
                        "Gmail giri≈ü ba≈üarƒ±sƒ±z: ${error?.message}",
                        Toast.LENGTH_LONG
                    ).show()
                }
            } catch (e: Exception) {
                hideLoading()
                println("DEBUG: Gmail giri≈ü exception: ${e.message}")
                e.printStackTrace()

                Toast.makeText(
                    this@LoginActivity,
                    "Gmail giri≈ü hatasƒ±: ${e.message}",
                    Toast.LENGTH_LONG
                ).show()
            }
        }
    }

    /**
     * Email giri≈ü dialog'u g√∂ster - Sadece giri≈ü
     */
    private fun showEmailLoginDialog() {
        val dialogView = layoutInflater.inflate(R.layout.dialog_email_login_only, null)
        val etEmail = dialogView.findViewById<TextInputEditText>(R.id.et_email)
        val etPassword = dialogView.findViewById<TextInputEditText>(R.id.et_password)

        AlertDialog.Builder(this)
            .setTitle("üìß Email ile Giri≈ü Yap")
            .setView(dialogView)
            .setPositiveButton("Giri≈ü Yap") { _, _ ->
                val email = etEmail.text.toString().trim()
                val password = etPassword.text.toString().trim()

                if (email.isNotEmpty() && password.isNotEmpty()) {
                    signInWithEmail(email, password)
                } else {
                    Toast.makeText(this, "Email ve ≈üifre gerekli", Toast.LENGTH_SHORT).show()
                }
            }
            .setNegativeButton("ƒ∞ptal", null)
            .show()
    }

    /**
     * Email ile giri≈ü yap
     */
    private fun signInWithEmail(email: String, password: String) {
        showLoading("$email ile giri≈ü yapƒ±lƒ±yor...")

        lifecycleScope.launch {
            try {
                val result = auth.signInWithEmailAndPassword(email, password).await()
                val user = result.user

                if (user != null) {
                    hideLoading()
                    Toast.makeText(this@LoginActivity,
                        "Ho≈ü geldiniz, ${user.email}! üéâ",
                        Toast.LENGTH_SHORT).show()
                    navigateToGroupSelection()
                } else {
                    hideLoading()
                    Toast.makeText(this@LoginActivity, "Email giri≈ü ba≈üarƒ±sƒ±z", Toast.LENGTH_SHORT).show()
                }

            } catch (e: Exception) {
                hideLoading()
                val errorMessage = when {
                    e.message?.contains("invalid-email") == true -> "Ge√ßersiz email adresi"
                    e.message?.contains("wrong-password") == true -> "Yanlƒ±≈ü ≈üifre"
                    e.message?.contains("user-not-found") == true -> "Bu email ile kayƒ±tlƒ± kullanƒ±cƒ± bulunamadƒ±"
                    e.message?.contains("too-many-requests") == true -> "√áok fazla deneme yapƒ±ldƒ±, l√ºtfen bekleyin"
                    else -> "Giri≈ü hatasƒ±: ${e.message}"
                }

                Toast.makeText(this@LoginActivity, errorMessage, Toast.LENGTH_LONG).show()
            }
        }
    }

    /**
     * Grup se√ßim ekranƒ±na git
     */
    private fun navigateToGroupSelection() {
        val intent = Intent(this, GroupSelectionActivity::class.java)
        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
        startActivity(intent)
        finish()
    }

    /**
     * Loading g√∂stergisini g√∂ster
     */
    private fun showLoading(message: String) {
        binding.progressLoading.visibility = View.VISIBLE
        binding.tvLoadingStatus.visibility = View.VISIBLE
        binding.tvLoadingStatus.text = message
        binding.btnGoogleSignin.isEnabled = false
        binding.btnEmailSignin.isEnabled = false
        binding.btnRegister.isEnabled = false
    }

    /**
     * Loading g√∂stergisini gizle
     */
    private fun hideLoading() {
        binding.progressLoading.visibility = View.GONE
        binding.tvLoadingStatus.visibility = View.GONE
        binding.btnGoogleSignin.isEnabled = true
        binding.btnEmailSignin.isEnabled = true
        binding.btnRegister.isEnabled = true
    }
}